swagger: '2.0'
info:
  version: '1.0.0'
  title: E-corp
  description: api bancaire
  termsOfService: http://
  contact:
    name: Swagger API team
    email: foo@example.com
    url: http://swagger.io
  license:
    name: aucune
    url: http://inexistante
host: userstore.swagger.io
basePath: /
schemes:
  - http
consumes:
  - application/json
  - text/html
produces:
  - application/json
  - text/html
paths:
  /user/{id}:
    get:
      description: information d'un utilisateur

      parameters:
        - name: id
          in: path
          required: true
          description: id du user 
          type: integer
          format: int32
      responses:
        '200':
          description: reponse user
          schema:
            $ref: '#/definitions/user'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    post:
      description: creer un nouveau user
      operationId: addUser
      parameters:
        - name: id
          in: path
          required: true
          description: user a ajouter
          type: integer
          format: int64
      responses:
        '200':
          description: reponse user
          schema:
            $ref: '#/definitions/user'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    put:
      description: mettre à jour un user
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          description: user a modifier
          type: integer
          format: int64
      responses:
        '200':
          description: reponse user
          schema:
            $ref: '#/definitions/user'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: supprimer un utilisateur
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          description: user a supprimer
          type: integer
          format: int64
      responses:
        '200':
          description: reponse user
          schema:
            $ref: '#/definitions/user'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /account/{id}:
    get:
      description: information d'un compte utilisateur
      parameters:
        - name: id
          in: path
          required: true
          description: id du compte (Compte courant/ clé primaire)
          type: integer
          format: int32
      responses:
        '200':
          description: reponse compte
          schema:
            $ref: '#/definitions/account'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    post:
      description: creer un nouveau compte dans la banque
      operationId: addCompte
      parameters:
        - name: id
          in: path
          required: true
          description: compte a ajouter
          type: integer
          format: int64
      responses:
        '200':
          description: reponse compte
          schema:
            $ref: '#/definitions/account'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  
  /transaction/{id}:
    get:
      description: retourne les transactions effectuées sous ce compte
      operationId: findTransactionById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of transaction to fetch
          type: integer
          format: int64
      responses:
        '200':
          description: transaction response
          schema:
            $ref: '#/definitions/transaction'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    post:
      description: post les transactions effectuées sous ce compte
      operationId: postTransactionById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of transaction to fetch
          type: integer
          format: int64
      responses:
        '200':
          description: transaction response
          schema:
            $ref: '#/definitions/transaction'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    put:
      description: update les transactions effectuées sous ce compte
      operationId: updateTransactionById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of transaction to fetch
          type: integer
          format: int64
      responses:
        '200':
          description: transaction response
          schema:
            $ref: '#/definitions/transaction'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: delete les transactions effectuées sous ce compte
      operationId: deleteTransactionById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of transaction to fetch
          type: integer
          format: int64
      responses:
        '200':
          description: transaction response
          schema:
            $ref: '#/definitions/transaction'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
            
            
            
            
            
            
            
            
            
definitions:
  user:
    type: object
    required:
      - id
      - firstname
      - lastname
      - typeUser
      - password
      - email
      - company
    properties:
      id:
        type: integer
        format: int64
      firstname:
        type: string
      lastname:
        type: string
      typeUser:
        type: string
      password:
        type: string
      email:
        type: string
      company:
        type: string
  transaction:
    type: object
    required:
      - id
      - created_at
      - modified_at
      - type
      - status
      - payer
      - beneficiary
      - message
      - montant
    properties:
      id:
        type: integer
        format: int64
      created_at:
        type: string
        format: date
      modified_at:
        type: string
        format: date
      type:
        type: string
      status:
        type: boolean
      payer:
        type: string
      beneficiary:
        type: string
      message:
        type: string
      montant:
        type: number
        format: float
      amount:
        type: integer
        format: double
  account:
    type: object
    required:
      - id
      - name
      - noCompte
      - credit
      - created_at
      - modified_at
      - transactions
      - token
      - account_nb
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      noCompte:
        type: integer
        format: int64
      credit:
        type: number
        format: float
      created_at:
        type: string
        format: date
      modified_at:
        type: string
        format: date
      transactions:
        type: object
      token:
        type: string
        format: string8
      account_nb:
        type: string
        format: string12
  errorModel:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
